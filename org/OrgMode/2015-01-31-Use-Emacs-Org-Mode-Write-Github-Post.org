#+OPTIONS: num:nil
#+OPTIONS: ^:nil
#+OPTIONS: toc:nil
#+AUTHOR: Zhengchao Xu
#+EMAIL: xuzhengchaojob@gmail.com

#+BEGIN_HTML
---
layout: post
title: 使用OrgMode撰写博客
category: [OrgMode]
tag: [emacs, orgmode]
description: [A brief description about how to write post with orgmode]
---
#+END_HTML

* 更新记录
** Emacs 24.4.1 + org mode 8.2.10(Mac)
 换了mac后,又下载了最新的24.4.1版本, 发现之前的脚本不能用了.
 现在是写了一个publish 工程, 然后再emacs里执行org-publish命令完成.

 #+BEGIN_SRC lisp
 ;; =============== Org Publish =====================
 (setq org-publish-project-alist
       '(("github-blog"
	  :base-directory "/Users/douhua/lx/github/blog/org/post/"
	  :publishing-directory "/Users/douhua/lx/github/blog/_posts/"
	  ;;:base-directory "/Users/douhua/lx/org/post/"
	  ;;:publishing-directory "/Users/douhua/lx/org/_posts/"
	  :prepare-function nil
	  :completion-function nil
	  :exclude "*.html"
	  :recursive nil
	  :base-extension "org"
	  :publishing-function org-html-publish-to-html
	  :body-only t
	  )))

 #+END_SRC
** +Not working on Emacs 24.4.1 (Mac)+
*** Why do I do this???
   Before I decided to learn emacs and lisp, I used markdown and jeklly to write
 github post, as many people do.

 Now, it's the year of 2015, "*Learning Emacs and Lisp*" is one of my plans of 
 this year, so I decide to do all the things in emacs, including writing github
 post.

 Then I thought, since I decided to write things, why not use orgmode to do this?
 I had been using it for a while as a *GTD* tool, and I think orgmode is much more 
 cooler than mardown.

 But I am such a newbie on Emacs and OrgMode, I don't know how to do this at all,
 so I do some researches on google and read some douments.

 Thanks to these guys who share their experience about this, finally, I made it.

*** Things I do:
**** 1. My original github blog arch
 As methioned before, I used *markdown+jekyll* to write post before transfer 
 to orgmode, these are the import contents of my blog folder then:
 + index.html
 + _layouts/
 + _posts/
 + assets/

 If you write blog with jekyll, you must know what these contents mean.

**** 2. Makefile
 I found this cool *Makefile* and *public-config.el* on the web, so only
 need to use command *make* to generate all the org files to html.

**** 3. publish-config.el
 The core file that Makefile uses is public-config.el, it defines some
 configurations for the orgmode *publish* command.


 The lisp code above doing these things:
 + 1. Load org-jekyll-mode.el, it's a minor mode to export org file to 
   jekyll-formatted html. Download it from [[https://github.com/jsuper/org-jekyll-mode/blob/master/org-jekyll-mode.el][here]].
 + 2. org-publish-project-alist defines the org file folder and the dest 
   html folder. Here I only export body as I have a default css format.
**** 4. jekyll format in org file
 As jekyll has its own format, such as *layout/title/tag/..*, so add this
 format to the org file and treat it as HTML.

 #+BEGIN_SRC org
 #+OPTIONS: ^:nil
 #+AUTHOR: Luis404
 #+EMAIL: luisxu404@gmail.com

 #+BEGIN_HTML
 ---
 layout: post
 title: Use Emacs OrgMode Write Github Post
 tag: [Emacs, Orgmode]
 description: [A brief description about how to write post with orgmode]
 ___
 #+END_HTML
 #+END_SRC

 OK, that's all, so you just run *make*, and all the org files become 
 jekyll html file.
